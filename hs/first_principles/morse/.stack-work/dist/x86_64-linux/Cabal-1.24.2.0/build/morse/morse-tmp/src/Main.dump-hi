
==================== FINAL INTERFACE ====================
2017-04-19 01:00:39.938171 UTC

interface main@main:Main 8002
  interface hash: eea67a72afde751f68976d00ba7ecc5b
  ABI hash: aef2e62e0a2c1abb7e1de31430e1f978
  export-list hash: 367b9d7bd508738653fd26598355dfc3
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: c5501db46855a858a0f367fa4190245b
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.convertFromMorse
  Main.convertToMorse
  Main.main
module dependencies: Morse
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:Data.Traversable 556020d7cf3c4a34a774600512918a37
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.IO.Handle ba98a5b34d78cbf48b41fe58a3735c69
import  -/  base-4.9.1.0:GHC.IO.Handle.FD dbf0d0d4f42ab1465129a88ccf7880ff
import  -/  base-4.9.1.0:GHC.IO.Handle.Text b65719f3b262b071ab1aabeb72fc9d8b
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Environment 08cb808e8e6a7821e6f8cfa76a977431
import  -/  base-4.9.1.0:System.Exit 068ba078eb20417d7af66db8b8ab4db1
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  Morse cdd34b73a42b479880d7f7b0c6049316
  exports: 59d1c61c5978c4d81db11f7c35eb8691
  morseToChar 64603afe10fe7cdf7a50c742bc04280f
  stringToMorse f0fa23163609de44e62e6f9952ce2e20
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
a1e8bbbf618f368db98a19ea0dbb2c65
  convertFromMorse :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.convertFromMorse1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
a78932ee5714cd7f4780df0f0a87d481
  convertFromMorse1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
ba63606205ffd049dc350da2f3a32e15
  convertToMorse :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.convertToMorse1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
e64f6563ec288b9f8808229f2bc067b4
  convertToMorse1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
42e8854b343ea58e80e9187a4672e4c5
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
0d7d722dbbc6ba419b466b216db95c37
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Environment.getArgs1 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   [] -> Main.main4 @ () ipv
                   : arg ds
                   -> case ds of wild1 {
                        []
                        -> case GHC.Base.eqString arg Main.main3 of wild2 {
                             GHC.Types.False
                             -> case GHC.Base.eqString arg Main.main2 of wild3 {
                                  GHC.Types.False -> Main.main4 @ () ipv
                                  GHC.Types.True -> Main.convertToMorse1 ipv }
                             GHC.Types.True -> Main.convertFromMorse1 ipv }
                        : ipv2 ipv3 -> Main.main4 @ () ipv } } }) -}
fd434b5b8cdd60c63d3b157f285bcb25
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "to"#) -}
8f591e731d2c649a8053373110f038c6
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "from"#) -}
10125377b6e1acfc91a1416aa7b37e72
  main4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ @ b
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main5
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 System.Exit.die2 @ b ipv }) -}
cfb369a7fbb32ff958091f63957d7fc5
  main5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Please specify the first argument as being 'from' or 'to' morse, such as: morse to"#) -}
5785a05df769481e563eb47d80eb1f6b
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

